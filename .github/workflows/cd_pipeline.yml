name: Build and Deploy API Moutsti Orders

on:
  push:
    branches:
      - main  # Rodar o workflow quando houver push na branch main
      - develop  # Rodar o workflow quando houver push na branch main


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step para gerar o TIMESTAMP dinamicamente
      - name: Generate TIMESTAMP
        id: generate-timestamp
        run: echo "timestamp=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Configurar o JDK 17 para a build do projeto Spring Boot
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      # Build do projeto Spring Boot usando Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Build Docker image
      - name: Build the Docker image
        env: # Declaração global de variáveis
          TIMESTAMP: ${{ steps.generate-timestamp.outputs.timestamp }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: docker build . --tag api-orders:${BRANCH_NAME}-$TIMESTAMP

      # Tag the Docker image
      - name: Tag Docker image
        env: # Declaração global de variáveis
          TIMESTAMP: ${{ steps.generate-timestamp.outputs.timestamp }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: docker tag api-orders:${BRANCH_NAME}-$TIMESTAMP registry.digitalocean.com/repository-api-moutsti-orders/api-orders:${BRANCH_NAME}-$TIMESTAMP

      # Push Docker image to DOCR
      - name: Push Docker image to Digital Ocean
        env: # Declaração global de variáveis
          TIMESTAMP: ${{ steps.generate-timestamp.outputs.timestamp }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          echo ${{ secrets.DOCKER_TOKEN }} | docker login registry.digitalocean.com -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push registry.digitalocean.com/repository-api-moutsti-orders/api-orders:${BRANCH_NAME}-$TIMESTAMP