name: CI Pipeline API Moutsti Orders

on:
  pull_request:
    branches:
      - develop
      - homolog
      - release
      - main

jobs:
  # Job para executar os testes com Maven
  test:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Passo 2: Configurar o Java 11
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      # Passo 3: Executar os testes Maven
      - name: Run Maven tests
        run: mvn test

  # Job para executar a análise de código com SonarQube
  sonarcloud:
    runs-on: ubuntu-latest
    needs: test  # Executa após o job de testes

    steps:
      # Passo 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Passo 2: Configurar o Java 11
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      # Passo 3: Executar a análise SonarQube
      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean verify
          mvn sonar:sonar \
            -Dsonar.projectKey=cookiesoft-solucoes-em-ti-ltda_api-moutsti-orders \
            -Dsonar.organization=cookiesoft-solucoes-em-ti-ltda \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.branch.name=${{ github.event.pull_request.base.ref }} \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.qualitygate.wait=true

      # Verificação do Quality Gate (opcional, se não for utilizado o `sonar.qualitygate.wait=true`)
      - name: Quality Gate check
        if: failure()  # Este passo só é executado se a análise falhar
        run: echo "Quality Gate failed"
